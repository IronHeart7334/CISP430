; general comments
; if((ch >= 'a') && (ch <= 'z')){
;   lowerCount++;
; } else {
;   if((ch >= 'A') && (ch <= 'Z')){
;       upperCount++;
;   } else {
;       otherCount++;
;   }
; }
;
; ch is AL
; lowerCount, upperCount, and otherCount are all bytes in named memory
; everything is unsigned

; preprocessor directives
.586
.MODEL FLAT

; external files to link with

; stack configuration
.STACK 4096

; named memory allocation and initialization
.DATA
lowerCount BYTE 0
upperCount BYTE 0
otherCount BYTE 0

; names of procedures defined in other *.asm files in the project

; procedure code
.CODE
main	PROC

	mov AL 'm'

    checkLowerCaseLower:
        cmp AL, 'z'
        ja checkUpperCaseLower ; must be at most 'z' to be lower case. Break out of &&
    checkLowerCaseUpper:
        cmp AL, 'a'
        jb checkUpperCaseLower
    isLowerCase: ; if it passed both of the above, it's lower case
        inc lowerCount
        jmp done

    ; check for upper case
    checkUpperCaseLower:
        cmp AL, 'Z'
        ja neitherUpperNorLower
    checkUpperCaseUpper:
        cmp AL, 'A'
        jb neitherUpperNorLower
    isUpperCase:
        inc upperCount
        jmp done

    neitherUpperNorLower:
        inc otherCount
        jmp done

    done:
        ; done

	mov EAX, 0
	ret
main	ENDP

END
